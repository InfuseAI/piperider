name: Nightly Build
on:
  schedule:
    - cron: '0 18 * * 0,1,2,3,4' # run at 2 AM (UTC + 8) every working day
  workflow_dispatch:
    branches:
      - main
    inputs:
      alpha_version:
        description: 'Alpha version serial number'
        required: true
        type: number
        default: '0'

jobs:
  build-nightly-release:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Release to PyPi
        run: |
          # remove tracking config for nightly build
          echo "" > ./piperider_cli/data/CONFIG

          # generate pypirc
          echo "$PYPIRC" > $HOME/.pypirc

          # change package name to piperider-nightly
          sed -i.bak "s/name='piperider'/name='piperider-nightly'/" setup.py


          # update version number
          echo "Nightly build version: $(date '+%Y%m%d')"
          if [ "$ALPHA_VERSION" != "" ]; then
            echo "Manually alpha version serial number: $ALPHA_VERSION"
            sed -i.bak "s/\.dev\$/\.$(date '+%Y%m%d')a$ALPHA_VERSION/" piperider_cli/VERSION
          else
            sed -i.bak "s/\.dev\$/\.$(date '+%Y%m%d')/" piperider_cli/VERSION
          fi
          echo "Nightly build version: $(cat piperider_cli/VERSION)"
          echo "::set-output name=nightly_version::$(cat piperider_cli/VERSION)"

          # release to PyPI
          make release
        env:
          PYPIRC: ${{ secrets.PYPI_NIGHTLY }}
          ALPHA_VERSION: ${{ inputs.alpha_version || '' }}

      - name: Mark Sentry Release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: nightly
          ignore_empty: true
          ignore_missing: true
          version: ${{ steps.vars.outputs.nightly_version }}
