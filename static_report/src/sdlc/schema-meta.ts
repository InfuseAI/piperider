export const schemaMetaDescriptions = {
  "name": "Name of this column",
  "description": "Descriptor of this column",
  "ref_id": "The reference unique id to the dbt resource",
  "row_count": "Number of rows in this table",
  "duplicate_rows": "Number of rows that have identical values across corresponding columns in this table",
  "duplicate_rows_p": "Percentage of rows that have identical values across corresponding columns in this table",
  "samples": "Number of rows after applying the row-limit configuration (rows will be unaffected if none is set",
  "samples_p": "Percentage of rows after applying the row-limit configuration (rows will be unaffected if none is set",
  "created": "The time that this table created at in ISO 8601 format including time zone",
  "last_altered": "The last time that this table modified at in ISO 8601 format including time zone",
  "bytes": "The volume size of this table in bytes",
  "freshness": "Time differentiation between the current time and table's last altered time",
  "col_count": "Number of columns in this table",
  "total": "The total count of values, regardless of validity",
  "nulls": "The count of values that are null type",
  "nulls_p": "The percentage of values that are null type",
  "non_nulls": "The count of non null values",
  "non_nulls_p": "The percentage of non null values",
  "distinct": "The count of distinct kinds of values (e.g. [a,b,c,c] => [a,b,c])",
  "distinct_p": "The percentage of distinct kinds of values (e.g. [a,b,c,c] => [a,b,c])",
  "duplicates": "The count of values that are recurring (e.g. [a,b,c,c] => [c,c])",
  "duplicates_p": "The percentage of values that are recurring (e.g. [a,b,c,c] => [c,c])",
  "non_duplicates": "The count of values that are non-recurring (e.g. [a,b,c,c] => [a,b])",
  "non_duplicates_p": "The percentage of values that are non-recurring (e.g. [a,b,c,c] => [a,b])",
  "topk": "The most common or frequent value",
  "type": "Generic types of schema, python-based",
  "schema_type": "The column type definition in SQL database",
  "valids": "The count of values that are non-null and not invalid",
  "valids_p": "The percentage of values that are non-null and not invalid",
  "invalids": "The count of values that don't match the schema type. For example, a string in a numeric column.",
  "invalids_p": "The percentage of values that don't match the schema type. For example, a string in a numeric column.",
  "zeros": "The count of numerical values that equal zero exactly",
  "zeros_p": "The percentage of numerical values that equal zero exactly",
  "negatives": "The count of numerical values that are less than zero",
  "negatives_p": "The percentage of numerical values that are less than zero",
  "positives": "The count of numerical values that are more than zero",
  "positives_p": "The percentage of numerical values that are more than zero",
  "zero_length": "The count of string values with zero lengths exactly",
  "zero_length_p": "The percentage of string values with zero lengths exactly",
  "non_zero_length": "The count of string values with non-zero lengths",
  "non_zero_length_p": "The percentage of string values with non-zero lengths",
  "trues": "The count of boolean true values",
  "trues_p": "The percentage of boolean true values",
  "falses": "The count of boolean false values",
  "falses_p": "The percentage of boolean false values",
  "sum": "The sum of a column's values",
  "avg": "The average of a column's values",
  "avg_length": "The average text length of a string column",
  "stddev": "The standard deviation of a column's values",
  "stddev_length": "The standard deviation of text length of a string column",
  "min": "The minimum value of a column's range",
  "min_length": "The minimum length of a string column",
  "max": "The maximum value of a column's range",
  "max_length": "The maximum length of a string column",
  "p5": "The quantile value of the dataset (5th percentile)",
  "p25": "The quantile value of the dataset (25th percentile)",
  "p50": "The quantile value of the dataset (50th percentile)",
  "p75": "The quantile value of the dataset (75th percentile)",
  "p95": "The quantile value of the dataset (95th percentile)"
}
    